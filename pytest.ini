[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers for test categorization
markers =
    unit: Unit tests
    slow: Slow running tests
    config: Configuration related tests
    database: Database related tests
    extractor: Data extraction tests
    transformer: Data transformation tests
    handler: Handler/Controller tests
    security: Security tests
    coverage: Coverage validation tests
    edge_case: Edge case tests
    performance: Performance tests
    memory: Memory efficiency tests
    benchmark: Benchmark tests
    regression: Regression tests
    system: System resource tests
    backup: Backup system tests
    integration: Integration tests

# Comprehensive configuration
addopts =
    --strict-markers
    --strict-config
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --cov-branch
    -v
    --tb=short
    --color=yes
    --durations=10

# Minimum version
minversion = 6.0

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:sqlalchemy.*

# Test environment
env =
    LEDGER_TEST_MODE = true
    PYTHONPATH = .

# Test timeout (in seconds)
timeout = 300

# Coverage configuration
[coverage:run]
source = src
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */.*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Financial Data Processor Coverage Report

name: Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.9"
  LEDGER_TEST_MODE: "true"
  PYTHONPATH: "."

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security:
    runs-on: ubuntu-latest
    name: Security Analysis
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
        
    - name: Debug test discovery
      run: |
        echo "=== Test Discovery Debug ==="
        find tests/ -name "test_*.py" -type f
        echo "=== Python Path ==="
        python -c "import sys; print('\\n'.join(sys.path))"
        echo "=== Pytest Version ==="
        pytest --version
        
    - name: Run Bandit security scan
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        bandit -r src/ -f txt -o bandit-report.txt || true
        
    - name: Run Safety check
      run: |
        pip install safety
        safety check --json --output safety-report.json || true
        
    - name: Run security tests
      run: |
        pytest -m security --maxfail=1 --tb=short -q --disable-warnings -v
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          bandit-report.txt
          safety-report.json

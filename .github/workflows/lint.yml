name: Code Linting

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: "3.9"

permissions:
  contents: read
  actions: read

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Code Linting

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt

    - name: Run Pylint
      run: |
        pylint src/ tests/ scripts/ --rcfile=config/.pylintrc --score=y --fail-under=9.75

    - name: Run MyPy type checking
      run: |
        mypy src/ --config-file=config/mypy.ini

    - name: Check for unused imports
      run: |
        python -c "
        import ast
        import os

        def check_unused_imports(file_path):
            with open(file_path, 'r') as f:
                try:
                    tree = ast.parse(f.read())
                    for node in ast.walk(tree):
                        if isinstance(node, ast.Import):
                            for alias in node.names:
                                if alias.asname:
                                    print(f'Unused import alias: {alias.asname} in {file_path}')
                        elif isinstance(node, ast.ImportFrom):
                            for alias in node.names:
                                if alias.asname:
                                    print(f'Unused import alias: {alias.asname} in {file_path}')
                except:
                    pass

        for root, dirs, files in os.walk('src'):
            for file in files:
                if file.endswith('.py'):
                    check_unused_imports(os.path.join(root, file))
        "
